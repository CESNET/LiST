- name: Copy host specific NEMEA configuration
  synchronize:
    src: "{{ configuration.local }}"
    dest: "{{ configuration.dest }}"
    archive: no
    recursive: yes
    times: yes
    delete: yes
    rsync_opts:
      - "--omit-dir-times"
      - "--exclude=supervisor_config_gener.xml"
      - "--exclude=nemea_status.conf"
  notify:
    - Restart NEMEA supervisor
  ignore_errors: yes

- name: Check for reporters configuration
  stat: path={{ nemea_reporters_config_path }}
  register: reporters_conf
  ignore_errors: True

- name: Create default reporters configuration
  copy:
    src: "reporters-config.yml"
    dest: "{{ nemea_reporters_config_path }}"
  when: not reporters_conf.stat.exists

- name: Check for Warden config dir
  local_action: stat path={{ configuration_warden.local }}
  become: false
  register: warden_conf_dir
  ignore_errors: True

- name: Copy Warden client configuration for NEMEA
  synchronize:
    src: "{{ configuration_warden.local }}"
    dest: "{{ configuration_warden.dest }}"
    archive: no
    recursive: yes
    times: yes
    delete: yes
    rsync_opts:
      - "--omit-dir-times"
  notify:
    - Restart NEMEA supervisor
  when: warden_conf_dir.stat.exists

- name: Install warden client
  copy:
    src: "{{ warden_client_file.src }}"
    dest: "{{ warden_client_file.dest }}"
    group: "{{ warden_client_file.group }}"
    owner: "{{ warden_client_file.owner }}"
    mode: "{{ warden_client_file.mode }}"

- name: Add configuration to startup.xml
  blockinfile:
    dest: "{{ ipfixcol_startup_xml.dest }}"
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK (NEMEA UNIREC OUTPUT) -->"
    insertbefore: "<singleManager>"
    backup: yes
    content: |
                <destination>
                        <name>Make unirec from the flow data</name>
                        <fileWriter>
                                <fileFormat>unirec</fileFormat>
                                <!-- Default interface -->
                                <interface>
                                        <type>u</type>
                                        <params>flow_data_source</params>
                                        <ifcTimeout>10000</ifcTimeout>
                                        <flushTimeout>1000000</flushTimeout>
                                        <bufferSwitch>1</bufferSwitch>
                                        <format>DST_IP,SRC_IP,BYTES,LINK_BIT_FIELD,TIME_FIRST,TIME_LAST,PACKETS,?DST_PORT,?SRC_PORT,DIR_BIT_FIELD,PROTOCOL,?TCP_FLAGS,?TOS,?TTL</format>
                                </interface>
                               <!-- VOIP interface -->
                                <interface>
                                        <type>u</type>
                                        <params>voip_data_source</params>
                                        <ifcTimeout>1000</ifcTimeout>
                                        <flushTimeout>1000000</flushTimeout>
                                        <bufferSwitch>1</bufferSwitch>
                                        <format>DST_IP,SRC_IP,BYTES,LINK_BIT_FIELD,TIME_FIRST,TIME_LAST,PACKETS,?DST_PORT,SIP_MSG_TYPE,?SIP_STATUS_CODE,?SRC_PORT,DIR_BIT_FIELD,PROTOCOL,?TCP_FLAGS,?TOS,?TTL,SIP_CALLED_PARTY,SIP_CALLING_PARTY,?SIP_CALL_ID,?SIP_CSEQ,?SIP_REQUEST_URI,?SIP_USER_AGENT,?SIP_VIA</format>
                                </interface>
                        </fileWriter>
                </destination>
  notify: Restart NEMEA supervisor
