- name: Create templates for nagios-server
  template:
    src: "{{ item }}"
    dest: "{{ config_files.dest }}"
  with_items: "{{ config_files.templates }}"
  notify: Nagios restart

- name: Copy default Nagios configs
  copy:
    src: "{{ item }}"
    dest: "{{ config_files.dest }}"
  with_items: "{{ config_files.configs }}"
  notify: Nagios restart

- name: Check host specific Nagios configs
  local_action: stat path={{ config_files.host }}
  become: false
  register: nagios_conf_dir
  ignore_errors: True

- name: Copy host specific Nagios configs
  synchronize:
    src: "{{ config_files.host }}"
    dest: "{{ config_files.dest }}"
    archive: no
    recursive: yes
    times: yes
    delete: no
    rsync_opts:
      - "--omit-dir-times"
  notify:
    - Nagios restart
  when: nagios_conf_dir.stat.exists

- name: Remove Nagios web password protection
  lineinfile:
    dest: "{{ config_files.web }}"
    regexp: "{{ item }}"
    state: absent
  with_items:
    - 'AuthName "Nagios Access"'
    - 'AuthType Basic'
    - 'AuthUserFile /etc/nagios/passwd'
    - 'Require valid-user'
  when: nagios_server_nopasswd is defined and nagios_server_nopasswd
  notify: Apache reload

- name: Remove Nagios service authentication
  lineinfile:
    dest: "{{ config_files.cgi }}"
    regexp: "^use_authentication="
    line: "use_authentication=0"
  when: nagios_server_nopasswd is defined and nagios_server_nopasswd
  notify: Nagios restart
